<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.codeboyq</groupId>
	<artifactId>AdminiMover</artifactId>
	<version>1.0.1</version>
	<packaging>jar</packaging>

	<name>AdminiMover</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<slf4j.version>1.7.25</slf4j.version>
		<logback.version>1.2.3</logback.version>
		<yaml.version>1.21</yaml.version>
		<maven.jar.plugin.version>3.1.0</maven.jar.plugin.version>
		<maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
		<maven.dependecy.plugin.version>3.1.1</maven.dependecy.plugin.version>
		<maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
		<maven.antrun.plugin.version>1.8</maven.antrun.plugin.version>
		<output.dir>dist/AdminiMoverApp</output.dir>
		<output.dir.binaries>${output.dir}/_Binaries</output.dir.binaries>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-ext</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>${yaml.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<!-- Clean the output directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven.clean.plugin.version}</version>
				<configuration>
					<followSymLinks>false</followSymLinks>
					<filesets>
						<fileset>
							<directory>${output.dir}</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- Copy the resources to the output directory -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${output.dir.binaries}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<includes>
										<include>adminimover-config.yml</include>
										<include>logback.xml</include>
										<include>run.sh</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-automator-app</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${output.dir}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/macosx-automator/application</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Copy the dependencies to a lib subfolder in the output directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependecy.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${output.dir.binaries}/libs
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Create the executable jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addClasspath>true</addClasspath>
							<classpathPrefix>libs/</classpathPrefix>
							<mainClass>com.codeboyq.AdminiMover.MainApp</mainClass>
						</manifest>
					</archive>
					<outputDirectory>${output.dir.binaries}</outputDirectory>
					<finalName>adminiMoverApp</finalName>
					<excludes>
						<exclude>**/*.yml</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Grant Execute rights to the Automator Application and the Shell script -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven.antrun.plugin.version}</version>
				<executions>
					<execution>
						<id>process-test-classes</id>
						<phase>process-test-classes</phase>
						<configuration>
							<target>
								<chmod
									dir="${output.dir}/AdminiMover.app/Contents/MacOS/Application Stub"
									perm="755" />
								<chmod file="${output.dir.binaries}/run.sh" perm="755" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
